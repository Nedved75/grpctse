// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: relay/processing/v1/payment_processing_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Relay.Processing.V1 {
  public static partial class PaymentProcessing
  {
    static readonly string __ServiceName = "relay.processing.v1.PaymentProcessing";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.ChargeRequest> __Marshaller_relay_processing_v1_ChargeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.ChargeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.ChargeResponse> __Marshaller_relay_processing_v1_ChargeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.ChargeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.RefundRequest> __Marshaller_relay_processing_v1_RefundRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.RefundRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.RefundResponse> __Marshaller_relay_processing_v1_RefundResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.RefundResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.GetSummaryRequest> __Marshaller_relay_processing_v1_GetSummaryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.GetSummaryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.GetSummaryResponse> __Marshaller_relay_processing_v1_GetSummaryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.GetSummaryResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.GetOperationsSummaryRequest> __Marshaller_relay_processing_v1_GetOperationsSummaryRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.GetOperationsSummaryRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Relay.Processing.V1.GetOperationsSummaryResponse> __Marshaller_relay_processing_v1_GetOperationsSummaryResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Relay.Processing.V1.GetOperationsSummaryResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Relay.Processing.V1.ChargeRequest, global::Relay.Processing.V1.ChargeResponse> __Method_Charge = new grpc::Method<global::Relay.Processing.V1.ChargeRequest, global::Relay.Processing.V1.ChargeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Charge",
        __Marshaller_relay_processing_v1_ChargeRequest,
        __Marshaller_relay_processing_v1_ChargeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Relay.Processing.V1.RefundRequest, global::Relay.Processing.V1.RefundResponse> __Method_Refund = new grpc::Method<global::Relay.Processing.V1.RefundRequest, global::Relay.Processing.V1.RefundResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Refund",
        __Marshaller_relay_processing_v1_RefundRequest,
        __Marshaller_relay_processing_v1_RefundResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Relay.Processing.V1.GetSummaryRequest, global::Relay.Processing.V1.GetSummaryResponse> __Method_GetSummary = new grpc::Method<global::Relay.Processing.V1.GetSummaryRequest, global::Relay.Processing.V1.GetSummaryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSummary",
        __Marshaller_relay_processing_v1_GetSummaryRequest,
        __Marshaller_relay_processing_v1_GetSummaryResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Relay.Processing.V1.GetOperationsSummaryRequest, global::Relay.Processing.V1.GetOperationsSummaryResponse> __Method_GetOperationsSummary = new grpc::Method<global::Relay.Processing.V1.GetOperationsSummaryRequest, global::Relay.Processing.V1.GetOperationsSummaryResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOperationsSummary",
        __Marshaller_relay_processing_v1_GetOperationsSummaryRequest,
        __Marshaller_relay_processing_v1_GetOperationsSummaryResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Relay.Processing.V1.PaymentProcessingServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PaymentProcessing</summary>
    [grpc::BindServiceMethod(typeof(PaymentProcessing), "BindService")]
    public abstract partial class PaymentProcessingBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Relay.Processing.V1.ChargeResponse> Charge(global::Relay.Processing.V1.ChargeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Relay.Processing.V1.RefundResponse> Refund(global::Relay.Processing.V1.RefundRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Relay.Processing.V1.GetSummaryResponse> GetSummary(global::Relay.Processing.V1.GetSummaryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Relay.Processing.V1.GetOperationsSummaryResponse> GetOperationsSummary(global::Relay.Processing.V1.GetOperationsSummaryRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PaymentProcessing</summary>
    public partial class PaymentProcessingClient : grpc::ClientBase<PaymentProcessingClient>
    {
      /// <summary>Creates a new client for PaymentProcessing</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PaymentProcessingClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PaymentProcessing that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PaymentProcessingClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PaymentProcessingClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PaymentProcessingClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.ChargeResponse Charge(global::Relay.Processing.V1.ChargeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Charge(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.ChargeResponse Charge(global::Relay.Processing.V1.ChargeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Charge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.ChargeResponse> ChargeAsync(global::Relay.Processing.V1.ChargeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChargeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.ChargeResponse> ChargeAsync(global::Relay.Processing.V1.ChargeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Charge, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.RefundResponse Refund(global::Relay.Processing.V1.RefundRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Refund(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.RefundResponse Refund(global::Relay.Processing.V1.RefundRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Refund, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.RefundResponse> RefundAsync(global::Relay.Processing.V1.RefundRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefundAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.RefundResponse> RefundAsync(global::Relay.Processing.V1.RefundRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Refund, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.GetSummaryResponse GetSummary(global::Relay.Processing.V1.GetSummaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSummary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.GetSummaryResponse GetSummary(global::Relay.Processing.V1.GetSummaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSummary, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.GetSummaryResponse> GetSummaryAsync(global::Relay.Processing.V1.GetSummaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSummaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.GetSummaryResponse> GetSummaryAsync(global::Relay.Processing.V1.GetSummaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSummary, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.GetOperationsSummaryResponse GetOperationsSummary(global::Relay.Processing.V1.GetOperationsSummaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOperationsSummary(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Relay.Processing.V1.GetOperationsSummaryResponse GetOperationsSummary(global::Relay.Processing.V1.GetOperationsSummaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOperationsSummary, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.GetOperationsSummaryResponse> GetOperationsSummaryAsync(global::Relay.Processing.V1.GetOperationsSummaryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOperationsSummaryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Relay.Processing.V1.GetOperationsSummaryResponse> GetOperationsSummaryAsync(global::Relay.Processing.V1.GetOperationsSummaryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOperationsSummary, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override PaymentProcessingClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PaymentProcessingClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(PaymentProcessingBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Charge, serviceImpl.Charge)
          .AddMethod(__Method_Refund, serviceImpl.Refund)
          .AddMethod(__Method_GetSummary, serviceImpl.GetSummary)
          .AddMethod(__Method_GetOperationsSummary, serviceImpl.GetOperationsSummary).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PaymentProcessingBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Charge, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Relay.Processing.V1.ChargeRequest, global::Relay.Processing.V1.ChargeResponse>(serviceImpl.Charge));
      serviceBinder.AddMethod(__Method_Refund, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Relay.Processing.V1.RefundRequest, global::Relay.Processing.V1.RefundResponse>(serviceImpl.Refund));
      serviceBinder.AddMethod(__Method_GetSummary, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Relay.Processing.V1.GetSummaryRequest, global::Relay.Processing.V1.GetSummaryResponse>(serviceImpl.GetSummary));
      serviceBinder.AddMethod(__Method_GetOperationsSummary, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Relay.Processing.V1.GetOperationsSummaryRequest, global::Relay.Processing.V1.GetOperationsSummaryResponse>(serviceImpl.GetOperationsSummary));
    }

  }
}
#endregion
